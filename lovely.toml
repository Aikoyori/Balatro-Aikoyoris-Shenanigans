[manifest]
version = "1.2"
dump_lua = true
priority = 0


[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = """    local card_aligned = 'bm'"""
position = "at"
payload = """    local card_aligned = 'bm'
    if extra and extra.card_align then card_aligned = extra.card_align end
    local card_trigger_before = false
    if extra and extra.card_trigger_before then card_trigger_before = extra.card_trigger_before end
    local card_trigger = 'before'
    if extra and extra.card_trigger then card_trigger = extra.card_trigger end
"""
overwrite = true
match_indent = true


[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = """            G.E_MANAGER:add_event(Event({ --Add bonus chips from this card
                    trigger = 'before',
                    delay = delay,
                    func = function()
                    if extrafunc then extrafunc() end
                    attention_text({
                        text = text,
                        scale = config.scale or 1, 
                        hold = delay - 0.2,
                        backdrop_colour = colour,
                        align = card_aligned,
                        major = card,
                        offset = {x = 0, y = y_off}
                    })
                    play_sound(sound, 0.8+percent*0.2, volume)
                    if not extra or not extra.no_juice then
                        card:juice_up(0.6, 0.1)
                        G.ROOM.jiggle = G.ROOM.jiggle + 0.7
                    end
                    return true
                    end
            }))"""
position = "at"
payload = """            G.E_MANAGER:add_event(Event({ --Add bonus chips from this card
                    trigger = card_trigger,
                    delay = delay,
                    func = function()
                    if extrafunc then extrafunc() end
                    attention_text({
                        text = text,
                        scale = config.scale or 1, 
                        hold = delay - 0.2,
                        backdrop_colour = colour,
                        align = card_aligned,
                        major = card,
                        offset = {x = 0, y = y_off}
                    })
                    play_sound(sound, 0.8+percent*0.2, volume)
                    if not extra or not extra.no_juice then
                        card:juice_up(0.6, 0.1)
                        G.ROOM.jiggle = G.ROOM.jiggle + 0.7
                    end
                    return true
                    end
            }), 'base', card_trigger_before)"""
overwrite = true
match_indent = true

[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = """    self.config.highlighted_limit = config.highlight_limit or 5"""
position = "at"
payload = """    self.config.highlighted_limit = config.highlight_limit or G.GAME.aiko_cards_playable or 5"""
overwrite = true
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = """    if #G.hand.highlighted <= 0 or G.GAME.blind.block_play or #G.hand.highlighted > 5 then """
position = "at"
payload = """    if #G.hand.highlighted <= 0 or G.GAME.blind.block_play or #G.hand.highlighted > G.GAME.aiko_cards_playable then"""
overwrite = true
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/misc_functions.lua"
pattern = """    enhanced = G.C.SECONDARY_SET.Enhanced"""
position = "after"
payload = """,
    playable = G.C.PLAYABLE"""
overwrite = true
match_indent = true


[[patches]]
[patches.pattern]
target = "card.lua"
pattern = """                if self.greyed then"""
position = "before"
payload = """                aikoyori_draw_extras(self, layer)"""
overwrite = true
match_indent = true


[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "    boot_timer('prep stage', 'splash prep',1)"
position = "before"
payload = """    aiko_mod_startup(self)"""
overwrite = true
match_indent = true


[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "      ease_value(card.T, 'scale',v[2] and 0.25 or -0.15,nil,'REAL',true,0.2)"
position = "after"
payload = """
if v[3] then card.ability.aikoyori_letters_stickers = v[3] else card.ability.aikoyori_letters_stickers = nil end
"""
overwrite = true
match_indent = true


[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "        for k, v in ipairs(card_protos) do"
position = "before"
payload = """
card_protos = customDeckHooks(self,card_protos)

"""
overwrite = true
match_indent = true



[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "                    self.children.front:draw_shader('dissolve')"
position = "before"
payload = """
if not self.is_null then
"""
overwrite = true
match_indent = true


[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "                    self.children.front:draw_shader('dissolve')"
position = "after"
payload = """
end
"""
overwrite = true
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "                    self.children.front:draw_shader('negative', nil, self.ARGS.send_to_shader)"
position = "before"
payload = """
if not self.is_null then
"""
overwrite = true
match_indent = true


[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "                    self.children.front:draw_shader('negative', nil, self.ARGS.send_to_shader)"
position = "after"
payload = """
end
"""
overwrite = true
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "                        self.children.front:draw_shader('played', nil, self.ARGS.send_to_shader)"
position = "before"
payload = """
if not self.is_null then
"""
overwrite = true
match_indent = true


[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "                        self.children.front:draw_shader('played', nil, self.ARGS.send_to_shader)"
position = "after"
payload = """
end
"""

overwrite = true
match_indent = true


[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "    return generate_card_ui(self.config.center, nil, loc_vars, card_type, badges, hide_desc, main_start, main_end)"
position = "before"
payload = """
self.config.center.is_null = self.is_null
self.config.center.aikoyori_letters_stickers = self.ability.aikoyori_letters_stickers
"""

overwrite = true
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = """        elseif specific_vars and (card_type == 'Default' or card_type == 'Enhanced') then"""
position = "after"
payload = """
        if not _c.is_null and card_type == 'Enhanced' then 
"""
overwrite = true
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = """        elseif card_type == 'Booster' then"""
position = "before"
payload = """
end
"""
overwrite = true
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = """   --Fill all remaining info if this is the main desc"""
position = "before"
payload = """

"""
overwrite = true
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = """        generate_card_ui(v, full_UI_table)"""
position = "at"
payload = """        generate_card_ui(v, full_UI_table, v.vars)"""
overwrite = true
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = """    elseif _c.set == 'Default' and specific_vars then """
position = "after"
payload = """
        if not _c.is_null then 
"""
overwrite = true
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = """    elseif _c.set == 'Enhanced' then """
position = "before"
payload = """
end
"""
overwrite = true
match_indent = true


[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = """        desc_nodes[#desc_nodes+1] = main_start """
position = "before"
payload = """
"""
overwrite = true
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = """
    if main_start then 
        desc_nodes[#desc_nodes+1] = main_start 
    end
"""
position = "before"
payload = """
if not (_c.is_null and _c.set == 'Default') then 
    hide_desc = true
end
"""
overwrite = true
match_indent = true

[[patches]]
[patches.regex]
target = "card.lua"
pattern = """(?<indent>[\t ]*)(?<render>self.children.front:draw_shader\\('\\w+', nil, self.ARGS.send_to_shader\\))"""
position = "at"
line_prepend = '$indent'
payload = """
if not (self.is_null) then 
    --print("WTF")
    $render
end
"""
overwrite = true
match_indent = true
